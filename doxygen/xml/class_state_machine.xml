<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_state_machine" kind="class" language="C++" prot="public">
    <compoundname>StateMachine</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05" prot="public" static="no" strong="no">
        <type></type>
        <name>state_</name>
        <enumvalue id="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a719252e4af3f2d4d400138ed8a563978" prot="public">
          <name>IDLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05aafb0d174faf70902e9c837b5be0f68c0" prot="public">
          <name>STANDBY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a77d6440247deb77e0de296ff9a6be0f0" prot="public">
          <name>READY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a64b20ddf61a980cf18e135d5683a0cac" prot="public">
          <name>FREEZING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a2f1d06f5c007a388f9f527704953d2f2" prot="public">
          <name>SETTINGS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="17" column="20" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="17" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_state_machine_1ad229860b7e18bb96db926449fb15ba1b" prot="private" static="no" mutable="no">
        <type><ref refid="class_state" kindref="compound">State</ref> *</type>
        <definition>State* StateMachine::m_pState</definition>
        <argsstring></argsstring>
        <name>m_pState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="44" column="12" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_state_machine_1a782375a77a78b3edd69c7aad3c3e6cea" prot="private" static="no" mutable="no">
        <type><ref refid="class_state" kindref="compound">State</ref> *</type>
        <definition>State* StateMachine::m_pIdle</definition>
        <argsstring></argsstring>
        <name>m_pIdle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="45" column="12" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_state_machine_1a715acc47b83849c68e6a7368deaa6e63" prot="private" static="no" mutable="no">
        <type><ref refid="class_state" kindref="compound">State</ref> *</type>
        <definition>State* StateMachine::m_pStandby</definition>
        <argsstring></argsstring>
        <name>m_pStandby</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="46" column="12" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_state_machine_1a4e1bf3dd6e58cfffabde5a5363601b06" prot="private" static="no" mutable="no">
        <type><ref refid="class_state" kindref="compound">State</ref> *</type>
        <definition>State* StateMachine::m_pReady</definition>
        <argsstring></argsstring>
        <name>m_pReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="47" column="12" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_state_machine_1a95519800a9a6152f3a9faa85ff8463e7" prot="private" static="no" mutable="no">
        <type><ref refid="class_state" kindref="compound">State</ref> *</type>
        <definition>State* StateMachine::m_pFreezing</definition>
        <argsstring></argsstring>
        <name>m_pFreezing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="48" column="12" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_state_machine_1a1eb4d49bcd7fd3ac01dcf99710673285" prot="private" static="no" mutable="no">
        <type><ref refid="class_state" kindref="compound">State</ref> *</type>
        <definition>State* StateMachine::m_pSettings</definition>
        <argsstring></argsstring>
        <name>m_pSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="49" column="12" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_state_machine_1a2fb07002510ea9141019559750acfab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StateMachine::StateMachine</definition>
        <argsstring>()</argsstring>
        <name>StateMachine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="25" column="9" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="7" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1ab56b97149281d3f87cbe6048a286945b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="29" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1a495969735d95c9b8f93d8e96e1e39312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::idle</definition>
        <argsstring>()</argsstring>
        <name>idle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="31" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1a82415f9d0892c7a54951c59eabd44f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::standby</definition>
        <argsstring>()</argsstring>
        <name>standby</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="32" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1aaa24b3d5015b8dfe48805dae0a8ed415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::ready</definition>
        <argsstring>()</argsstring>
        <name>ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="33" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1ae731b2567d3992b25b28175fbfff5c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::freezing</definition>
        <argsstring>()</argsstring>
        <name>freezing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="34" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1aae5c568683edbbc20cb3b419865dfe53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::settings</definition>
        <argsstring>()</argsstring>
        <name>settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="35" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_state_machine_1a42965d6b5b855af5b8cb73c07d02035e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StateMachine::changeState</definition>
        <argsstring>(state_ state)</argsstring>
        <name>changeState</name>
        <param>
          <type>state_</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>this code can&apos;t meet MISRA C++ 2008 delete m_pState; if (state==IDLE){ m_pState = new <ref refid="class_idle_state" kindref="compound">IdleState()</ref>; } if (state==STANDBY){ m_pState = new <ref refid="class_settings_state" kindref="compound">SettingsState()</ref>; } if (state==READY){ m_pState = new <ref refid="class_ready_state" kindref="compound">ReadyState()</ref>; } if (state==FREEZING){ m_pState = new <ref refid="class_freezing_state" kindref="compound">FreezingState()</ref>; } if (state==SETTINGS){ m_pState = new <ref refid="class_settings_state" kindref="compound">SettingsState()</ref>; }</para>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="37" column="14" bodyfile="D:/git/StatePattern/StatePattern/src/StateMachine.cpp" bodystart="33" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/git/StatePattern/StatePattern/include/StateMachine.h" line="14" column="1" bodyfile="D:/git/StatePattern/StatePattern/include/StateMachine.h" bodystart="13" bodyend="50"/>
    <listofallmembers>
      <member refid="class_state_machine_1a42965d6b5b855af5b8cb73c07d02035e" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>changeState</name></member>
      <member refid="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a64b20ddf61a980cf18e135d5683a0cac" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>FREEZING</name></member>
      <member refid="class_state_machine_1ae731b2567d3992b25b28175fbfff5c9d" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>freezing</name></member>
      <member refid="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a719252e4af3f2d4d400138ed8a563978" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>IDLE</name></member>
      <member refid="class_state_machine_1a495969735d95c9b8f93d8e96e1e39312" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>idle</name></member>
      <member refid="class_state_machine_1a95519800a9a6152f3a9faa85ff8463e7" prot="private" virt="non-virtual"><scope>StateMachine</scope><name>m_pFreezing</name></member>
      <member refid="class_state_machine_1a782375a77a78b3edd69c7aad3c3e6cea" prot="private" virt="non-virtual"><scope>StateMachine</scope><name>m_pIdle</name></member>
      <member refid="class_state_machine_1a4e1bf3dd6e58cfffabde5a5363601b06" prot="private" virt="non-virtual"><scope>StateMachine</scope><name>m_pReady</name></member>
      <member refid="class_state_machine_1a1eb4d49bcd7fd3ac01dcf99710673285" prot="private" virt="non-virtual"><scope>StateMachine</scope><name>m_pSettings</name></member>
      <member refid="class_state_machine_1a715acc47b83849c68e6a7368deaa6e63" prot="private" virt="non-virtual"><scope>StateMachine</scope><name>m_pStandby</name></member>
      <member refid="class_state_machine_1ad229860b7e18bb96db926449fb15ba1b" prot="private" virt="non-virtual"><scope>StateMachine</scope><name>m_pState</name></member>
      <member refid="class_state_machine_1aaa24b3d5015b8dfe48805dae0a8ed415" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>ready</name></member>
      <member refid="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a77d6440247deb77e0de296ff9a6be0f0" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>READY</name></member>
      <member refid="class_state_machine_1ab56b97149281d3f87cbe6048a286945b" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>run</name></member>
      <member refid="class_state_machine_1aae5c568683edbbc20cb3b419865dfe53" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>settings</name></member>
      <member refid="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05a2f1d06f5c007a388f9f527704953d2f2" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>SETTINGS</name></member>
      <member refid="class_state_machine_1a82415f9d0892c7a54951c59eabd44f61" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>standby</name></member>
      <member refid="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05aafb0d174faf70902e9c837b5be0f68c0" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>STANDBY</name></member>
      <member refid="class_state_machine_1adf6eecb0ab7a5a648984eafa01575e05" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>state_</name></member>
      <member refid="class_state_machine_1a2fb07002510ea9141019559750acfab8" prot="public" virt="non-virtual"><scope>StateMachine</scope><name>StateMachine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
