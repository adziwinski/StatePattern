<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="class_state" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>State</compoundname>
    <derivedcompoundref refid="class_freezing_state" prot="public" virt="non-virtual">FreezingState</derivedcompoundref>
    <derivedcompoundref refid="class_idle_state" prot="public" virt="non-virtual">IdleState</derivedcompoundref>
    <derivedcompoundref refid="class_ready_state" prot="public" virt="non-virtual">ReadyState</derivedcompoundref>
    <derivedcompoundref refid="class_settings_state" prot="public" virt="non-virtual">SettingsState</derivedcompoundref>
    <derivedcompoundref refid="class_standby_state" prot="public" virt="non-virtual">StandbyState</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_state_1ab02228b740ff4b97de97c01bf9251139" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string State::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="25" column="21" bodyfile="D:/git/StatePattern/StatePattern/include/State.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_state_1a42e234d79ea59b0b88957b20b8796c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>State::State</definition>
        <argsstring>(std::string)</argsstring>
        <name>State</name>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="11" column="9" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1afab438d92b90dc18d194dbd9c9c8bab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>State::~State</definition>
        <argsstring>()</argsstring>
        <name>~State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="12" column="17" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1a1b5758d9085b94efb79b2ae0c08e1f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>void State::run</definition>
        <argsstring>(StateMachine *stateMachine)=0</argsstring>
        <name>run</name>
        <reimplementedby refid="class_freezing_state_1aef68f7efbdd33da08b2db5670ba453f9">run</reimplementedby>
        <reimplementedby refid="class_idle_state_1afdcd2adb487430001e6dc6c6a551a4ca">run</reimplementedby>
        <reimplementedby refid="class_standby_state_1a8b52ee3685ba132c7b196e9320bd1b19">run</reimplementedby>
        <reimplementedby refid="class_settings_state_1aa0375b093bf59772d09fbbb9673c56a5">run</reimplementedby>
        <reimplementedby refid="class_ready_state_1ac1ec1d5eee5d64f4c8a02d8e62b5dd81">run</reimplementedby>
        <param>
          <type><ref refid="class_state_machine" kindref="compound">StateMachine</ref> *</type>
          <declname>stateMachine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="14" column="22" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1a96d293f9fbe271a9729814c68ad1d675" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void State::idle</definition>
        <argsstring>(StateMachine *stateMachine)</argsstring>
        <name>idle</name>
        <param>
          <type><ref refid="class_state_machine" kindref="compound">StateMachine</ref> *</type>
          <declname>stateMachine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="16" column="22" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1a8168a2663f5ffd69111a389bc1f0a55d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void State::standby</definition>
        <argsstring>(StateMachine *stateMachine)</argsstring>
        <name>standby</name>
        <reimplementedby refid="class_idle_state_1a8075ca91f96ef257c18c2b70ab31a134">standby</reimplementedby>
        <reimplementedby refid="class_settings_state_1a7ce6211f9229d5e4375613c5379ce00f">standby</reimplementedby>
        <reimplementedby refid="class_ready_state_1ab0aa3fd9ccff5ff777e2e373e17fe2a0">standby</reimplementedby>
        <param>
          <type><ref refid="class_state_machine" kindref="compound">StateMachine</ref> *</type>
          <declname>stateMachine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="17" column="22" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1a3789289ed733d94430f848be012b83f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void State::settings</definition>
        <argsstring>(StateMachine *stateMachine)</argsstring>
        <name>settings</name>
        <reimplementedby refid="class_standby_state_1ab50d85be40d59f2598393e074385d0f4">settings</reimplementedby>
        <reimplementedby refid="class_ready_state_1af2b95c8d203e9757d30ca93d5e91c05e">settings</reimplementedby>
        <param>
          <type><ref refid="class_state_machine" kindref="compound">StateMachine</ref> *</type>
          <declname>stateMachine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="18" column="22" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1a56fdf379cb521c3cf6af32351c4c93fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void State::ready</definition>
        <argsstring>(StateMachine *stateMachine)</argsstring>
        <name>ready</name>
        <reimplementedby refid="class_freezing_state_1a199ae53de8664a77f666c74cc47631ca">ready</reimplementedby>
        <reimplementedby refid="class_standby_state_1a909234de69dc57299ebf3b174d3153d0">ready</reimplementedby>
        <reimplementedby refid="class_settings_state_1ab6d3bfaee56f2a6349649b2c15418e95">ready</reimplementedby>
        <param>
          <type><ref refid="class_state_machine" kindref="compound">StateMachine</ref> *</type>
          <declname>stateMachine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="19" column="22" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1abb3b96c3af31002d1fa14b158b25fbe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void State::freezineg</definition>
        <argsstring>(StateMachine *stateMachine)</argsstring>
        <name>freezineg</name>
        <reimplementedby refid="class_ready_state_1ace59ae09ed80c84e4a415ec7c50f7d1d">freezineg</reimplementedby>
        <param>
          <type><ref refid="class_state_machine" kindref="compound">StateMachine</ref> *</type>
          <declname>stateMachine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="20" column="22" bodyfile="D:/git/StatePattern/StatePattern/src/State.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_state_1a03dfdcd7ce1eb54be168b27e7141e39c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string State::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/StatePattern/StatePattern/include/State.h" line="22" column="21" bodyfile="D:/git/StatePattern/StatePattern/include/State.h" bodystart="22" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>SettingsState</label>
        <link refid="class_settings_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>State</label>
        <link refid="class_state"/>
      </node>
      <node id="2">
        <label>FreezingState</label>
        <link refid="class_freezing_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>IdleState</label>
        <link refid="class_idle_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>ReadyState</label>
        <link refid="class_ready_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>StandbyState</label>
        <link refid="class_standby_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="D:/git/StatePattern/StatePattern/include/State.h" line="9" column="1" bodyfile="D:/git/StatePattern/StatePattern/include/State.h" bodystart="8" bodyend="27"/>
    <listofallmembers>
      <member refid="class_state_1abb3b96c3af31002d1fa14b158b25fbe6" prot="public" virt="virtual"><scope>State</scope><name>freezineg</name></member>
      <member refid="class_state_1a03dfdcd7ce1eb54be168b27e7141e39c" prot="public" virt="non-virtual"><scope>State</scope><name>getName</name></member>
      <member refid="class_state_1a96d293f9fbe271a9729814c68ad1d675" prot="public" virt="virtual"><scope>State</scope><name>idle</name></member>
      <member refid="class_state_1ab02228b740ff4b97de97c01bf9251139" prot="private" virt="non-virtual"><scope>State</scope><name>m_name</name></member>
      <member refid="class_state_1a56fdf379cb521c3cf6af32351c4c93fe" prot="public" virt="virtual"><scope>State</scope><name>ready</name></member>
      <member refid="class_state_1a1b5758d9085b94efb79b2ae0c08e1f8f" prot="public" virt="pure-virtual"><scope>State</scope><name>run</name></member>
      <member refid="class_state_1a3789289ed733d94430f848be012b83f5" prot="public" virt="virtual"><scope>State</scope><name>settings</name></member>
      <member refid="class_state_1a8168a2663f5ffd69111a389bc1f0a55d" prot="public" virt="virtual"><scope>State</scope><name>standby</name></member>
      <member refid="class_state_1a42e234d79ea59b0b88957b20b8796c3f" prot="public" virt="non-virtual"><scope>State</scope><name>State</name></member>
      <member refid="class_state_1afab438d92b90dc18d194dbd9c9c8bab3" prot="public" virt="virtual"><scope>State</scope><name>~State</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
